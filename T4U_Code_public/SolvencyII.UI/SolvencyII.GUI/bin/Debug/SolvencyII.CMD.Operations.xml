<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SolvencyII.CMD.Operations</name>
    </assembly>
    <members>
        <member name="M:SolvencyII.CMD.Operations.CMD_Util.#ctor(System.String[],System.String,System.String)">
            <summary>
            CMD_Util constructor to initialize the parameters required for the command line enabled Solvency II operations 
            </summary>
            <param name="args">command line arguments</param>
            <param name="DBpath">databae</param>
            <param name="applicationPath">current application location</param>
        </member>
        <member name="M:SolvencyII.CMD.Operations.CMD_Util.ExecuteCMD">
            <summary>
            Method to check the command line parameters, if the parameters are valid then the Import XBRL method excutions will starts
            </summary>
        </member>
        <member name="M:SolvencyII.CMD.Operations.CMD_Util.ImportXBRL(System.String,System.String)">
            <summary>
            ImportXBRL method intialize the ImportXBRLExportExcel class and starts import XBRL operation by calling the method importXBRLExportExcelAsync.
            </summary>
            <param name="xbrlFilePath">Source XBRL file for import</param>
            <param name="destExcelFilePath">Destiantion excel file for export</param>
        </member>
        <member name="M:SolvencyII.CMD.Operations.ExportExcelEvents.CompletedHandler(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>       
            Events to show the progress updates 
            </summary>
        </member>
        <member name="M:SolvencyII.CMD.Operations.ExportExcelEvents.ProgressChangedHandler(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
            <summary>
            Events : To show - Progress updates
            </summary>
        </member>
        <member name="M:SolvencyII.CMD.Operations.ExportExcelEvents.GranuleProgressChangedHandler(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
            <summary>
            Events : To show - Granule Progress updates
            </summary>
        </member>
        <member name="M:SolvencyII.CMD.Operations.ImportXBRLExportExcel.ArelleProgress(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
            <summary>
            Intialize ArelleProgress
            </summary>
            <param name="s"></param>
            <param name="args">Progress updates</param>
        </member>
        <member name="M:SolvencyII.CMD.Operations.ImportXBRLExportExcel.ImportXBRL2DbArelleComplete_ImportComplete(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>
            This mehod imports the XBRL into the database after successful import the method ExportToExcel will be called
            </summary>
            <param name="s"></param>
            <param name="args"></param>
        </member>
        <member name="M:SolvencyII.CMD.Operations.ImportXBRLExportExcel.ExportToExcel(System.String,System.String,System.Int64)">
            <summary>
            Export the instance into the excel - by calling the method ExportToExcelCMD
            </summary>
            <param name="_dbPath">Container path</param>
            <param name="templateFilePtah">Excel template path</param>
            <param name="instanceId">InstanceID to get exported</param>
        </member>
        <member name="M:SolvencyII.CMD.Operations.ImportXBRLExportExcel.GetExcelTemplatePath">
            <summary>
            Based upon the connectecd container type, it will provide the excel template path 
            </summary>
            <returns>Template path</returns>
        </member>
        <member name="M:SolvencyII.CMD.Operations.ImportXBRLExportExcel.GetTemplateFileExcel(System.String,System.Int64,System.String,System.String)">
            <summary>
            GetTemplateFileExcel method provides the excel template path, It required to get copy of the excel file and the data will be exported on it. 
            </summary>
            <param name="connectionString">ConnectionString for the conatiner</param>
            <param name="instanceID">InstanceID to get exported</param>
            <param name="excelTemplatePath">Excel template path</param>
            <param name="appStartupPath">Application installed path</param>
            <returns></returns>
        </member>
        <member name="M:SolvencyII.CMD.Operations.ImportXBRLExportExcel.ExportToExcelCMD(System.String,System.Int64,System.String)">
            <summary>
            ExportToExcelCMD method exports the specified instance instance into the excel file, (Operation: Excel export)
            </summary>
            <param name="connectionString">ConnectionString for the conatiner</param>
            <param name="instanceID">InstanceID to get exported</param>
            <param name="excelTemplatePath">Excel template path</param>
        </member>
    </members>
</doc>
